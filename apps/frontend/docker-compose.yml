services:
  spsync-api-image:
    build:
      context: ../..
      dockerfile: Dockerfile.testing
    image: spsync-api-image
  pg-db:
    command: postgres -c work_mem=8000
    restart: always
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sprint_sync_db
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD-SHELL
        - pg_isready
      timeout: 5s
    image: postgres:17
    shm_size: 1gb

  api-service:
    environment:
      - PG_MASTER_HOST=pg-db
      - PG_MASTER_PORT=5432
      - PG_PASSWORD=password
      - PG_USER=db_user
      - PG_DB=sprint_sync_db
      - JWT_SECRET=00061e533b0b926845441718e8102607f3c4cf297af080520beaca777f309b53
    image: spsync-api-image
    depends_on:
      pg-db:
        condition: service_started
      spsync-api-image:
        condition: service_completed_successfully
    volumes:
      - ../../:/app
    working_dir: /app/apps/api-service
    command: pnpm run start:dev
  seeder:
    environment:
      - PG_MASTER_HOST=pg-db
      - PG_MASTER_PORT=5432
      - PG_PASSWORD=password
      - PG_USER=db_user
      - PG_DB=sprint_sync_db
      - JWT_SECRET=00061e533b0b926845441718e8102607f3c4cf297af080520beaca777f309b53
    depends_on:
      pg-db:
        condition: service_started
      spsync-api-image:
        condition: service_completed_successfully
    volumes:
      - ../../:/app
    working_dir: /app/apps/seeder
    image: spsync-api-image
    command: pnpm run seed
  dev:
    environment:
      - API_URL=http://api-service:3000
    image: spsync-api-image
    depends_on:
      pg-db:
        condition: service_started
      api-service:
        condition: service_started
      seeder:
        condition: service_completed_successfully
    ports:
      - '3000:3000'
    volumes:
      - ../../:/app
    working_dir: /app/apps/frontend
    command: pnpm run dev
